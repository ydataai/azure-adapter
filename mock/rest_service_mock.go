// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/service/rest_service.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	common "github.com/ydataai/azure-quota-provider/pkg/common"
)

// MockRESTServiceInterface is a mock of RESTServiceInterface interface.
type MockRESTServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRESTServiceInterfaceMockRecorder
}

// MockRESTServiceInterfaceMockRecorder is the mock recorder for MockRESTServiceInterface.
type MockRESTServiceInterfaceMockRecorder struct {
	mock *MockRESTServiceInterface
}

// NewMockRESTServiceInterface creates a new mock instance.
func NewMockRESTServiceInterface(ctrl *gomock.Controller) *MockRESTServiceInterface {
	mock := &MockRESTServiceInterface{ctrl: ctrl}
	mock.recorder = &MockRESTServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRESTServiceInterface) EXPECT() *MockRESTServiceInterfaceMockRecorder {
	return m.recorder
}

// AvailableGPU mocks base method.
func (m *MockRESTServiceInterface) AvailableGPU(ctx context.Context) (common.GPU, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AvailableGPU", ctx)
	ret0, _ := ret[0].(common.GPU)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AvailableGPU indicates an expected call of AvailableGPU.
func (mr *MockRESTServiceInterfaceMockRecorder) AvailableGPU(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AvailableGPU", reflect.TypeOf((*MockRESTServiceInterface)(nil).AvailableGPU), ctx)
}
